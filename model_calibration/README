The model's final calibration (i.e. set of predictors and hyper-parameter values) and error estimation are carried over using OpenMOLE model exploration software. OpenMOLE is a platform desgined to simplify the set-up and design of numerical experiments and seamlessly execute complex numerical experiments in High Performance Computing (HPC) infrastructures. Running the calibration requires the installation (free) of OpenMOLE (https://openmole.org/Download.html). 

Files with suffix .oms are OpenMOLE files and contain the design instructions for the numerical experiment, including definitions of HPC environments to execute the experiments. We advice reproducing the analysis in an HPC environment because the computational load would render unusable for multiple days or weeks a modern PC. Credentials to access HPC environments can be added in (OpenMOLE https://openmole.org/Cluster.html). Each of the .oms files explores the models defined and trained in the corresponding Python files. In a nutshell, OpenMOLE creates an experimental set up based on inputs and outputs of the Python scripts and continuously sends to the computational environment containers with the model code and needed libraries. As an output, the optimal model configurations (i.e. set of predictors and hyper-parameters) is returned for each generation of the genetic algorithm used to minimize prediction error. Please follow https://openmole.org/Step+By+Step+Introduction.html and https://openmole.org/Documentation.html on instructions on how to get started with OpenMOLE. Still, to reproduce our analysis, only downloading the software and uploading the scripts provided within this directory is required. The .oms scripts can be executed with the Run command in OpenMOLE's GUI. 

The error estimation script performs model calibration (using spatial cross-validation) in subsets of the full dataset (all the data except the outer-fold). Then optimal configurations found in the inner-folds are tested against the outer-fold data. This nested procedure ensures that there is not information leakage between data used for calibration and data used for testing. The model error is estimated by taking the mean of the errors across all outer folds. This last step is carried over outside of OpenMOLE in a Jupyter notebook within this directory (error_estimation_outer_folds.ipynb). The calibration script does not separate outer and inner folds and uses all the data to find the best model configuration to predict each spatial cross-validation fold. The errors observed within this experiment are not reliable and do not represent a good estimation of real model error. 

